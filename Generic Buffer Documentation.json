{
    "device-name": "Air purifier",
    "device-type": "IPAirPurifier",
    "buffers-count": 5,
    "input-buffers": {
        "1": {
            "token-delimitators": "/", //Symbol that separates the tokens in the buffer
            "protocol": "HTTP", // The protocol used to communicate with this buffer
            "prefix": "http://127.0.0.1:9081/settings/", // The buffer requires that it is initialized with this content
            "buffer-tokens": [ // Description of each of the tokens that this buffer can receive. Think of them as the message's variables.
                {
                    "name": "Air purifier command",
                    "description": "Input that selects command",
                    "token-type": "string",
                    "byte-size": 20,
                    "regex-rule": "(airflow)|(humiditylevel)",
                    "optional": false
                },
                {
                    "name": "Air purifier parameter",
                    "description": "Parameters for the command chosen",
                    "token-type": "string",
                    "byte-size": 4,
                    "regex-rule": "=[0-5]",
                    "optional": true
                }
            ]
        }
        "2": {
            "token-delimitators": "/", //Symbol that separates the tokens in the buffer
            "protocol": "HTTP", // The protocol used to communicate with this buffer
            "prefix": "http://127.0.0.1:9081/settings/", // The buffer requires that it is initialized with this content
            "buffer-tokens": [ // Description of each of the tokens that this buffer can receive. Think of them as the message's variables.
                {
                    "name": "Air purifier command",
                    "description": "Input that selects command",
                    "token-type": "string",
                    "byte-size": 20,
                    "regex-rule": "[a-zA-Z]*",
                    "optional": false
                },
                {
                    "name": "Air purifier parameter",
                    "description": "Parameters for the command chosen",
                    "token-type": "string",
                    "byte-size": 4,
                    "regex-rule": "=[a-zA-Z0-9]*",
                    "optional": true
                }
            ]
        }
    },
    "output-buffers": {
        "1": {
            "token-delimitators": "/",
            "protocol": "HTTP",
            "prefix": "http://127.0.0.1:9081/settings", // The buffer requires that it is initialized with this content
            "caller": "remote", // Remote or Local. The caller variable describes who runs this buffer. Either
            // your app sends the data (local), or the data is requested by another device (remote)
            "buffer-tokens": [
                {
                    "name": "Get Data",
                    "description": "Command that returns an image",
                    "token-type": "string", // What type of token should be fuzzed in this position of the buffer
                    "byte-size": 256,
                    "regex-rule": "(all)|(airquality)|(humidity)", // Optional parameter to guide fuzzer generator
                    "optional": false // Can the fuzzer give a null value on this token?
                }
            ]
        },
        "2": {
            "token-delimitators": "/",
            "protocol": "FILE",
            "prefix": "local_disk",
            "buffer-tokens": [
                {
                    "name": "App file name",
                    "description": "Name for the output file",
                    "token-type": "string",
                    "byte-size": 32,
                    "regex-rule": "[a-zA-Z]*",
                    "optional": false
                },
                {
                    "name": "File content",
                    "description": "",
                    "token-type": "bytes",
                    "byte-size": "",
                    "regex-rule": "",
                    "optional": false
                }
            ]
        },
    }
}
}